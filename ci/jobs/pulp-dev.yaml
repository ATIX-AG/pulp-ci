- scm:
    name: pulp-packaging
    scm:
        - git:
            url: https://github.com/pulp/pulp_packaging.git
            branches:
                - '*/master'
            skip-tag: true


- job-template:
    name: 'pulp-{pulp_version}-dev-{os}'
    concurrent: false
    node: '{os}-vanilla-np'
    scm:
        - pulp-packaging
    wrappers:
        - config-file-provider:
            files:
                - file-id: rhn_credentials
                  variable: RHN_CREDENTIALS
    triggers:
        - reverse:
            jobs: 'build-automation-repo-{pulp_version}-dev'
            result: 'success'
    builders:
        - shell: |
            sudo yum install -y git ansible libselinux-python
            echo 'localhost' > hosts
            source ${{RHN_CREDENTIALS}}
            ansible-playbook -i hosts ci/ansible/pulp_server.yaml \
                -e pulp_version={pulp_version} \
                -e "rhn_username=${{RHN_USERNAME}}" \
                -e "rhn_password=${{RHN_PASSWORD}}" \
                -e "rhn_poolid=${{RHN_POOLID}}" \
                --connection=local
            ssh-keygen -t rsa -N "" -f pulp_server_key
            cat pulp_server_key.pub >> ~/.ssh/authorized_keys
            echo ${{SSH_CONNECTION}} | awk '{{ print "BASE_URL=https://"$3 }}' >> parameters.txt
        - inject:
            properties-file: parameters.txt
        - trigger-builds:
            - project:
                - pulp-smash-runner
              block: true
              predefined-parameters: |
                  BASE_URL=$BASE_URL
                  PULP_VERSION={pulp_version}
              block-thresholds:
                  build-step-failure-threshold: never
                  unstable-threshold: never
                  failure-threshold: never
              parameter-factories:
                  - factory: binaryfile
                    parameter-name: PRIVATE_KEY
                    file-pattern: pulp_server_key
                    no-files-found-action: FAIL
        - copyartifact:
            project: pulp-smash-runner
            which-build: specific-build
            build-number: ${{TRIGGERED_BUILD_NUMBER_PULP_SMASH_RUNNER}}
            flatten: true
    publishers:
        - junit:
            results: report.xml
        # Take the node offline so that another build doesn't pile on
        - groovy-postbuild:
            script: "manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)"


- job:
    name: pulp-smash-runner
    concurrent: false
    properties:
        - copyartifact:
            projects: pulp-*-dev-*
    node: f22-np
    parameters:
        - string:
            name: BASE_URL
        - string:
            name: PULP_VERSION
            decription: Pulp version setup on the server.
        - file:
            name: PRIVATE_KEY
            description: Private ssh key to connect on the server.
    scm:
        - pulp-packaging
    builders:
        - shell: |
            # Setup ssh config and private key
            cat > ~/.ssh/config <<EOF
            Host $(echo ${BASE_URL} | cut -d/ -f3)
                User jenkins
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                IdentityFile ${PWD}/PRIVATE_KEY
            EOF
            chmod 600 PRIVATE_KEY ~/.ssh/config

            sudo yum -y install python-pip python-virtualenv
            virtualenv venv
            source venv/bin/activate
            pip install -U setuptools
            pip install -r requirements.txt pytest

            mkdir -p pulp_smash
            cat > pulp_smash/settings.json <<EOF
            {
                "default": {
                    "base_url": "${BASE_URL}",
                    "auth": ["admin", "admin"],
                    "version": "${PULP_VERSION}",
                    "cli_transport": "ssh",
                    "verify": false
                }
            }
            EOF
            XDG_CONFIG_DIRS=. py.test -v --junit-xml=report.xml pulp_smash/tests
    publishers:
        - archive:
            artifacts: 'ci/ansible/pulp-smash/report.xml'
        # Take the node offline so that another build doesn't pile on
        - groovy-postbuild:
            script: "manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)"


- project:
    name: pulp-dev
    os:
        - f22
        - f23
        - rhel6
        - rhel7
    pulp_version:
        - 2.6
        - 2.7
        - 2.8
    jobs:
        - pulp-{pulp_version}-dev-{os}
