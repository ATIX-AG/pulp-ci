- job:
    name: 'unittest-pulp-pr'
    defaults: ci-workflow-runtest
    project-type: matrix
    node: 'master'
    axes:
      - axis:
          type: label-expression
          name: node-type
          values:
            - f20-np
            - f21-np
            - rhel5-np
            - rhel6-np
            - rhel7-np
    parameters:
        - string:
            name: sha1
            default: ''
            description: |
                The hash or refname of the branch to build: for example: origin/pr/9/head
        - matrix-combinations:
            name: MATRIX_AXIS
    # enable nodepool monitoring
    properties:
    - github:
        url: https://github.com/pulp/pulp/
    - zeromq-event
    scm:
        - git:
            url: 'https://github.com/pulp/pulp.git'
            refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
            branches:
              - "${sha1}"
            basedir: pulp
            skip-tag: True
            wipe-workspace: false
    triggers:
      - github-pull-request:
          admin-list:
            - pulpbot
          org-list:
            - pulp
          # Poll once per minute since our jenkins isn't public and web hooks aren't an option
          cron: '* * * * *'
          trigger-phrase: 'ok test'
          # only-trigger-phrase: true
          white-list-target-branches:
            - master
            - 2.6-dev
            - 2.6-testing
    builders:
        - shell: |
            #!/bin/bash
            echo "Setting up after source control extract"
            # env
            OS_NAME=$(lsb_release -si)
            OS_VERSION=$(lsb_release -sr | cut -f1 -d.)
            # setenforce 0
            cd $WORKSPACE

            set -x

            # get the base pulp version
            PULP_VERSION=$(grep -Po "(^[\d]+\.[\d]+)" pulp/rel-eng/packages/pulp)
            echo "PULP BASE VERSION: ${PULP_VERSION}"

            if [ "$OS_NAME" == "RedHatEnterpriseServer" ]; then
                REPO_URL="https://repos.fedorapeople.org/repos/pulp/pulp/testing/automation/${PULP_VERSION}/dev/\$releasever/\$basearch/"
            else
                REPO_URL="https://repos.fedorapeople.org/repos/pulp/pulp/testing/automation/${PULP_VERSION}/dev/fedora-\$releasever/\$basearch/"
            fi
            cat > pulp-deps.repo<< EndOfMessage
            [pulp-deps]
            name=pulp-deps
            baseurl=${REPO_URL}
            enabled=1
            gpgcheck=0
            EndOfMessage
            sudo mv pulp-deps.repo /etc/yum.repos.d/

            # only do this until we have a full deps build
            if [ "$OS_VERSION" != "5" ]; then
              sudo yum -y install python-mongoengine qpid-tools  python-rhsm --nogpgcheck
              # If rhel6
              if [ "$OS_VERSION" == "6" ]; then
                sudo yum -y install Django14  --nogpgcheck
              else
                sudo yum -y install python-django  --nogpgcheck
              fi
            fi


            sudo yum -y install --skip-broken --nogpgcheck @pulp-server @pulp-admin @pulp-consumer
            sudo yum -y remove pulp-\* python-pulp\*

            rm -rf $WORKSPACE/test
            mkdir -p $WORKSPACE/test
            rm -rf $WORKSPACE/coverage
            mkdir -p $WORKSPACE/coverage

            echo "Setting up pulp-server"
            cd $WORKSPACE/pulp
            for setup in `find . -name setup.py`; do
                pushd `dirname $setup`;
                sudo python setup.py develop;
                popd;
            done;
            sudo python ./pulp-dev.py -I

            cd $WORKSPACE/pulp
            export PYTHONUNBUFFERED=1
            set -x
            python ./run-tests.py --enable-coverage --with-xunit --xunit-file ../test/pulp_test.xml --with-xcoverage --xcoverage-file ../coverage/pulp_coverage.xml

    publishers:
      - cobertura:
          report-file: 'coverage/*.xml'
          fail-no-reports: true
          targets:
            - lines:
                healthy: 84
                unhealthy: 0.0
                failing: 0.0
      # Publish a pretty graph of the test results
      - junit:
          results: 'test/*.xml'
          keep-long-stdio: true
          test-stability: true
      # Take the node offline so that another build doesn't pile on
      - groovy-postbuild: "manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)"


#- job:
#    name: 'test-pulp-version'
#    defaults: ci-workflow-runtest
#    project-type: matrix
#    node: 'master'
#    axes:
#      - axis:
#          type: label-expression
#          name: node-type
#          values:
#            - f20-np
#            - f21-np
#            - rhel5-np
#            - rhel6-np
#            - rhel7-np
#    # enable nodepool monitoring
#    properties:
#      - github:
#          url: https://github.com/pulp/pulp_puppet/
#      - zeromq-event
#    scm:
#        - git:
#            url: 'https://github.com/barnabycourt/pulp_rpm.git'
#            branches:
#              - "plugin-requires"
#            skip-tag: True
#    builders:
#        - shell: |
#            #!/bin/bash
#            server_name=$(find . -name requirements.txt -exec grep pulp-server {} \; )
#            pulp_version=$(echo $server_name | sed -r 's/pulp-server(>=|==)([0-9]+\.[0-9+]).*/\2/')
#            echo ${pulp_version}
#
#
#    publishers:
#      # Take the node offline so that another build doesn't pile on
#      - groovy-postbuild: "manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)"

- job-template:
    name: 'unittest-{pulp_plugin}-pr'
    defaults: ci-workflow-runtest
    project-type: matrix
    node: 'master'
    axes:
      - axis:
          type: label-expression
          name: node-type
          values:
            - f20-np
            - f21-np
            - rhel5-np
            - rhel6-np
            - rhel7-np
    properties:
      - zeromq-event
    scm:
        - git:
            url: 'https://github.com/barnabycourt/{pulp_plugin}.git'
            basedir: "{pulp_plugin}"
            skip-tag: True
    builders:
        - shell: |
            #!/bin/bash
            # Set up and install the base pulp
            # double up the {{}} to deal with string format of the shell script
            set -x
            cd {pulp_plugin}
            git checkout plugin-requires

            server_name=$(find . -name requirements.txt -exec grep pulp-server {{}} \; )
            echo $server_name
            pulp_version=$(echo $server_name | sed -r 's/pulp-server(>=|==)([0-9]+\.[0-9+]).*/\2/')
            echo $pulp_version

            OS_NAME=$(lsb_release -si)
            OS_VERSION=$(lsb_release -sr | cut -f1 -d.)
            # setenforce 0
            cd $WORKSPACE
            set -x
            if [ "$OS_NAME" == "RedHatEnterpriseServer" ]; then
                REPO_URL="https://repos.fedorapeople.org/repos/pulp/pulp/testing/automation/${{pulp_version}}/\$releasever/\$basearch/"
            else
                REPO_URL="https://repos.fedorapeople.org/repos/pulp/pulp/testing/automation/${{pulp_version}}/fedora-\$releasever/\$basearch/"
            fi
            cat > pulp-deps.repo<< EndOfMessage
            [pulp-deps]
            name=pulp-deps
            baseurl=$REPO_URL
            enabled=1
            gpgcheck=0
            EndOfMessage
            sudo mv pulp-deps.repo /etc/yum.repos.d/

            # only do this until we have a full deps build
            if [ "$OS_VERSION" != "5" ]; then
              sudo yum -y install python-mongoengine qpid-tools  --nogpgcheck
              # If rhel6
              if [ "$OS_VERSION" == "6" ]; then
                sudo yum -y install Django14  --nogpgcheck
              else
                sudo yum -y install python-django  --nogpgcheck
              fi
            fi

            sudo yum -y install --skip-broken --nogpgcheck tito python-pulp-devel @pulp-server @pulp-admin @pulp-consumer

            # This is evil until we can fix our tests
            sudo chown -R jenkins:jenkins /etc/pulp


            echo "Build the plugin"
            cd $WORKSPACE/{pulp_plugin}

            tito build --test --offline --rpm
            echo "Setting up the plugin"
            cd /tmp/tito/noarch
            sudo yum -y localinstall $(ls)

            cd $WORKSPACE/{pulp_plugin}
            for setup in `find . -name setup.py`; do
                pushd `dirname $setup`;
                sudo python setup.py develop;
                popd;
            done;
            sudo python ./pulp-dev.py -I

            echo "Build the plugin"
            cd $WORKSPACE/{pulp_plugin}
            export PYTHONUNBUFFERED=1
            set -x
            mkdir -p $WORKSPACE/test
            mkdir -p $WORKSPACE/coverage
            python ./run-tests.py --enable-coverage --with-xunit --xunit-file ../test/pulp_test.xml --with-xcoverage --xcoverage-file ../coverage/pulp_coverage.xml

    publishers:
      - cobertura:
          report-file: 'coverage/*.xml'
          fail-no-reports: true
          targets:
            - lines:
                healthy: {min_coverage}
                unhealthy: 0.0
                failing: 0.0
      # Publish a pretty graph of the test results
      - junit:
          results: 'test/*.xml'
          keep-long-stdio: true
          test-stability: true
#      # Archive the test results
#      - archive:
#          artifacts: 'test/**'
#          allow-empty: 'true'
      # Take the node offline so that another build doesn't pile on
      - groovy-postbuild: "manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)"

- job-group:
    name: 'unittest-pr-job'
    jobs:
      - 'unittest-{pulp_plugin}-pr'

- project:
    name: unit-tests-pr
    jobs:
     - 'unittest-pr-job'
    pulp_plugin:
      - pulp_rpm:
          min_coverage: 87.0
          unittest_platforms:
            - f20-np
            - f21-np
            - rhel5-np
            - rhel6-np
            - rhel7-np