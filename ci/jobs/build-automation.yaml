# This set of Jenkins jobs creates an installs all the
# necessary tools to build a repository with the help of Koji, then publishes
# the results.

- job-template:
    name: 'build-automation-repo-{release_config}'
    defaults: ci-workflow-runtest
    node: 'rhel7-np'
    properties:
        - dev-ownership
    scm:
        - git:
            url: 'https://github.com/pulp/pulp_packaging.git'
            branches:
                - origin/master
            basedir: pulp_packaging
            skip-tag: true
            wipe-workspace: false
    triggers:
        - timed: "@midnight"
    parameters:
      - bool:
          name: RELEASE_BUILD
          default: false
          description: "Perform a release build, defaults to 'false'."
      - python-unbuffered
    wrappers:
        - jenkins-ssh-credentials
        - credentials-binding:
            - zip-file:
                credential-id: 9051da21-c8af-49bd-a0ac-c1dd94a6d216
                variable: KOJI_CONFIG
        - timeout:
            # Timeout in minutes
            timeout: 240
            timeout-var: 'BUILD_TIMEOUT'
            fail: true
    builders:
        - shell: |
            #!/bin/bash
            git config --global user.email "pulp-infra@redhat.com"
            git config --global user.name "pulpbot"
            git config --global push.default simple
            set -x

            # Add github.com as a known host
            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> /home/jenkins/.ssh/known_hosts
            chmod 644 /home/jenkins/.ssh/known_hosts

            env
            cd $WORKSPACE

            # Consider adding this as an option

            sudo yum -y install rpm-build redhat-rpm-config koji mock rpmdevtools rpmlint tito createrepo

            # Confirm koji is accessible
            cp -v -R $KOJI_CONFIG/.koji ~/
            cp -v $KOJI_CONFIG/.katello.cert ~/
            cp -v $KOJI_CONFIG/.katello-ca.cert ~/
            cp -v $KOJI_CONFIG/satellite6_rsa .
            koji moshimoshi
            cd pulp_packaging/ci

            if [ $RELEASE_BUILD == true ] ; then
              ./build-all.py {release_config} --release
            else
              # include unsupported dists in nightlies; this should highlight when dist_lists need to be
              # updated, and also provides continued testing of el6 nightly and in PRs
              ./build-all.py {release_config} --build-unsupported
            fi
    publishers:
      - join-trigger:
          # join-trigger does not fail the build if this project doesn't exist, so we
          # do not need to ensure that there is a promote job for every release config
          projects:
            - "build-automation-promote-{release_config}"
      - irc-notify-all-summary
      - email-notify-owners
      - mark-node-offline

- job-template:
    name: build-automation-promote-{release_config}
    defaults: ci-workflow-runtest
    node: 'rhel7-np'
    properties:
        - dev-ownership
    parameters:
      - python-unbuffered
      - bool:
          name: FORCE_PROMOTE
          default: false
          description: "Force promotion."
      - bool:
          name: DRY_RUN
          default: false
          description: "Make no changes to remote repos."
    scm:
        - git:
            url: 'https://github.com/pulp/pulp_packaging.git'
            branches:
                - origin/master
            basedir: pulp_packaging
            skip-tag: true
            wipe-workspace: false
    wrappers:
        - jenkins-ssh-credentials
        - timeout:
            # Timeout in minutes
            timeout: 240
            timeout-var: 'BUILD_TIMEOUT'
            fail: true
    builders:
        - shell: |
            cd "$WORKSPACE/pulp_packaging/ci"

            if [[ $FORCE_PROMOTE = "true" ]]; then promote_opts="$promote_opts --force"; fi
            if [[ $DRY_RUN = "true" ]]; then promote_opts="$promote_opts --dry-run"; fi

            ./promote-build.py $promote_opts --job-prefix pulp-{version}-dev {release_config}
    publishers:
      # - mark-node-offline is omitted: you can't have more than one groovy postbuild step, and
      #   groovy is used here to mark the build as unstable when promotion is blocked
      - groovy-postbuild:
          script: |
            manager.build.getBuiltOn().toComputer().setTemporarilyOffline(true)
            if(manager.logContains(".*Promotion blocked.*")) {{ manager.buildUnstable() }}
      - irc-notify-all-summary
      # - email-notify-owners
      # don't notify owners until #2022 is fixed
